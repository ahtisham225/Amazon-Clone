{"ast":null,"code":"// import { red } from \"@mui/material/colors\";\n\nexport const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\nexport function reducer(state, action) {\n  // console.log('coming here');\n  // console.log(action.type); \n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      // LOGIC FOR ADDING INTO BASKET\n      return {\n        ...state,\n        basket: [...state.basket, action.item]\n      };\n    // break;\n    case 'REMOVE_FROM_BASKET':\n      //REMOVING FROM BASKET \n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.log(\"Don't have item to Remove \");\n      }\n      return {\n        ...state,\n        basket: newBasket\n      };\n      break;\n    default:\n      return state;\n  }\n}\n\n// export const reducer;","map":{"version":3,"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","newBasket","index","findIndex","basketItem","id","splice","console","log"],"sources":["/home/ahtisham/Desktop/Jobs/Amazon Clone/Amazon-Clone/Amazon-Clone/amazon-clone/src/reducer.js"],"sourcesContent":["// import { red } from \"@mui/material/colors\";\n\nexport const initialState = {\n    basket: [],\n};\n\nexport const getBasketTotal = (basket) =>\nbasket?.reduce((amount,item) => item.price + amount, 0);\nexport function reducer(state, action){\n    // console.log('coming here');\n    // console.log(action.type); \n    switch(action.type){\n        case 'ADD_TO_BASKET':\n            // LOGIC FOR ADDING INTO BASKET\n            return {\n                ...state,\n                basket:[...state.basket,action.item]\n            };\n            // break;\n        case 'REMOVE_FROM_BASKET':\n            //REMOVING FROM BASKET \n            let newBasket = [...state.basket];\n            const index = state.basket.findIndex((basketItem)=> basketItem.id === action.id)\n            if(index >=0){\n                newBasket.splice(index,1);\n\n            }else {\n\n                console.log(\"Don't have item to Remove \");\n            }\n            return {...state, basket:newBasket};\n            break;\n        default:    \n            return state;\n\n    }\n}\n\n// export const reducer;"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,GAAG;EACxBC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAID,MAAM,IACrCA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,CAAC,CAACC,MAAM,EAACC,IAAI,KAAKA,IAAI,CAACC,KAAK,GAAGF,MAAM,EAAE,CAAC,CAAC;AACvD,OAAO,SAASG,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;EAClC;EACA;EACA,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,eAAe;MAChB;MACA,OAAO;QACH,GAAGF,KAAK;QACRP,MAAM,EAAC,CAAC,GAAGO,KAAK,CAACP,MAAM,EAACQ,MAAM,CAACJ,IAAI;MACvC,CAAC;IACD;IACJ,KAAK,oBAAoB;MACrB;MACA,IAAIM,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACP,MAAM,CAAC;MACjC,MAAMW,KAAK,GAAGJ,KAAK,CAACP,MAAM,CAACY,SAAS,CAAEC,UAAU,IAAIA,UAAU,CAACC,EAAE,KAAKN,MAAM,CAACM,EAAE,CAAC;MAChF,IAAGH,KAAK,IAAG,CAAC,EAAC;QACTD,SAAS,CAACK,MAAM,CAACJ,KAAK,EAAC,CAAC,CAAC;MAE7B,CAAC,MAAK;QAEFK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC7C;MACA,OAAO;QAAC,GAAGV,KAAK;QAAEP,MAAM,EAACU;MAAS,CAAC;MACnC;IACJ;MACI,OAAOH,KAAK;EAAC;AAGzB;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}